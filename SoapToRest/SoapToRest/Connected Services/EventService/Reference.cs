//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapToRest.EventService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/WcfProduct.Data")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoapToRest.EventService.ProductHasAttribute[] attributeListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int categoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string groupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int groupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int typeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoapToRest.EventService.ProductHasAttribute[] attributeList {
            get {
                return this.attributeListField;
            }
            set {
                if ((object.ReferenceEquals(this.attributeListField, value) != true)) {
                    this.attributeListField = value;
                    this.RaisePropertyChanged("attributeList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryField, value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int categoryId {
            get {
                return this.categoryIdField;
            }
            set {
                if ((this.categoryIdField.Equals(value) != true)) {
                    this.categoryIdField = value;
                    this.RaisePropertyChanged("categoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string group {
            get {
                return this.groupField;
            }
            set {
                if ((object.ReferenceEquals(this.groupField, value) != true)) {
                    this.groupField = value;
                    this.RaisePropertyChanged("group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int groupId {
            get {
                return this.groupIdField;
            }
            set {
                if ((this.groupIdField.Equals(value) != true)) {
                    this.groupIdField = value;
                    this.RaisePropertyChanged("groupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int typeId {
            get {
                return this.typeIdField;
            }
            set {
                if ((this.typeIdField.Equals(value) != true)) {
                    this.typeIdField = value;
                    this.RaisePropertyChanged("typeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductHasAttribute", Namespace="http://schemas.datacontract.org/2004/07/WcfProduct.Data")]
    [System.SerializableAttribute()]
    public partial class ProductHasAttribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int attributeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int attributeId {
            get {
                return this.attributeIdField;
            }
            set {
                if ((this.attributeIdField.Equals(value) != true)) {
                    this.attributeIdField = value;
                    this.RaisePropertyChanged("attributeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productId {
            get {
                return this.productIdField;
            }
            set {
                if ((this.productIdField.Equals(value) != true)) {
                    this.productIdField = value;
                    this.RaisePropertyChanged("productId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Business", Namespace="http://schemas.datacontract.org/2004/07/BusinessWcf.Data")]
    [System.SerializableAttribute()]
    public partial class Business : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string adressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> latitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> longitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string telephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool verifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string adress {
            get {
                return this.adressField;
            }
            set {
                if ((object.ReferenceEquals(this.adressField, value) != true)) {
                    this.adressField = value;
                    this.RaisePropertyChanged("adress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imageLink {
            get {
                return this.imageLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.imageLinkField, value) != true)) {
                    this.imageLinkField = value;
                    this.RaisePropertyChanged("imageLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string telephone {
            get {
                return this.telephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.telephoneField, value) != true)) {
                    this.telephoneField = value;
                    this.RaisePropertyChanged("telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool verified {
            get {
                return this.verifiedField;
            }
            set {
                if ((this.verifiedField.Equals(value) != true)) {
                    this.verifiedField = value;
                    this.RaisePropertyChanged("verified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.zipcodeField, value) != true)) {
                    this.zipcodeField = value;
                    this.RaisePropertyChanged("zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetailedEvent", Namespace="http://schemas.datacontract.org/2004/07/EventService.Contracts")]
    [System.SerializableAttribute()]
    public partial class DetailedEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoapToRest.EventService.Business1[] businessesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string creatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] participantsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoapToRest.EventService.Business1[] businesses {
            get {
                return this.businessesField;
            }
            set {
                if ((object.ReferenceEquals(this.businessesField, value) != true)) {
                    this.businessesField = value;
                    this.RaisePropertyChanged("businesses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryField, value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string creator {
            get {
                return this.creatorField;
            }
            set {
                if ((object.ReferenceEquals(this.creatorField, value) != true)) {
                    this.creatorField = value;
                    this.RaisePropertyChanged("creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] participants {
            get {
                return this.participantsField;
            }
            set {
                if ((object.ReferenceEquals(this.participantsField, value) != true)) {
                    this.participantsField = value;
                    this.RaisePropertyChanged("participants");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Business", Namespace="http://schemas.datacontract.org/2004/07/EventService")]
    [System.SerializableAttribute()]
    public partial class Business1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string adressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> latitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> longitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string adress {
            get {
                return this.adressField;
            }
            set {
                if ((object.ReferenceEquals(this.adressField, value) != true)) {
                    this.adressField = value;
                    this.RaisePropertyChanged("adress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Categories", Namespace="http://schemas.datacontract.org/2004/07/EventService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Categories : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Events", Namespace="http://schemas.datacontract.org/2004/07/EventService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Events : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int categoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int categoryId {
            get {
                return this.categoryIdField;
            }
            set {
                if ((this.categoryIdField.Equals(value) != true)) {
                    this.categoryIdField = value;
                    this.RaisePropertyChanged("categoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessConnections", Namespace="http://schemas.datacontract.org/2004/07/EventService")]
    [System.SerializableAttribute()]
    public partial class BusinessConnections : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int businessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int eventIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int businessId {
            get {
                return this.businessIdField;
            }
            set {
                if ((this.businessIdField.Equals(value) != true)) {
                    this.businessIdField = value;
                    this.RaisePropertyChanged("businessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int eventId {
            get {
                return this.eventIdField;
            }
            set {
                if ((this.eventIdField.Equals(value) != true)) {
                    this.eventIdField = value;
                    this.RaisePropertyChanged("eventId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Participants", Namespace="http://schemas.datacontract.org/2004/07/EventService")]
    [System.SerializableAttribute()]
    public partial class Participants : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int eventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime registeredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int eventId {
            get {
                return this.eventIdField;
            }
            set {
                if ((this.eventIdField.Equals(value) != true)) {
                    this.eventIdField = value;
                    this.RaisePropertyChanged("eventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime registered {
            get {
                return this.registeredField;
            }
            set {
                if ((this.registeredField.Equals(value) != true)) {
                    this.registeredField = value;
                    this.RaisePropertyChanged("registered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EventService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/listEvents", ReplyAction="http://tempuri.org/IService1/listEventsResponse")]
        string[] listEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/listEvents", ReplyAction="http://tempuri.org/IService1/listEventsResponse")]
        System.Threading.Tasks.Task<string[]> listEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/listCategories", ReplyAction="http://tempuri.org/IService1/listCategoriesResponse")]
        string[] listCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/listCategories", ReplyAction="http://tempuri.org/IService1/listCategoriesResponse")]
        System.Threading.Tasks.Task<string[]> listCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/listParticipantsForEvent", ReplyAction="http://tempuri.org/IService1/listParticipantsForEventResponse")]
        string[] listParticipantsForEvent(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/listParticipantsForEvent", ReplyAction="http://tempuri.org/IService1/listParticipantsForEventResponse")]
        System.Threading.Tasks.Task<string[]> listParticipantsForEventAsync(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/listBusinessesForEvent", ReplyAction="http://tempuri.org/IService1/listBusinessesForEventResponse")]
        string[] listBusinessesForEvent(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/listBusinessesForEvent", ReplyAction="http://tempuri.org/IService1/listBusinessesForEventResponse")]
        System.Threading.Tasks.Task<string[]> listBusinessesForEventAsync(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRandomProduct", ReplyAction="http://tempuri.org/IService1/getRandomProductResponse")]
        SoapToRest.EventService.Product getRandomProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRandomProduct", ReplyAction="http://tempuri.org/IService1/getRandomProductResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.Product> getRandomProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRandomBusiness", ReplyAction="http://tempuri.org/IService1/getRandomBusinessResponse")]
        SoapToRest.EventService.Business getRandomBusiness();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRandomBusiness", ReplyAction="http://tempuri.org/IService1/getRandomBusinessResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.Business> getRandomBusinessAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEvent", ReplyAction="http://tempuri.org/IService1/getEventResponse")]
        SoapToRest.EventService.DetailedEvent getEvent(System.Nullable<int> eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEvent", ReplyAction="http://tempuri.org/IService1/getEventResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent> getEventAsync(System.Nullable<int> eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEvents", ReplyAction="http://tempuri.org/IService1/getEventsResponse")]
        SoapToRest.EventService.DetailedEvent[] getEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEvents", ReplyAction="http://tempuri.org/IService1/getEventsResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent[]> getEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTodaysEvents", ReplyAction="http://tempuri.org/IService1/getTodaysEventsResponse")]
        SoapToRest.EventService.DetailedEvent[] getTodaysEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTodaysEvents", ReplyAction="http://tempuri.org/IService1/getTodaysEventsResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent[]> getTodaysEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUpcomingEvents", ReplyAction="http://tempuri.org/IService1/getUpcomingEventsResponse")]
        SoapToRest.EventService.DetailedEvent[] getUpcomingEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUpcomingEvents", ReplyAction="http://tempuri.org/IService1/getUpcomingEventsResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent[]> getUpcomingEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMyEvents", ReplyAction="http://tempuri.org/IService1/getMyEventsResponse")]
        SoapToRest.EventService.DetailedEvent[] getMyEvents(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMyEvents", ReplyAction="http://tempuri.org/IService1/getMyEventsResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent[]> getMyEventsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchForEvent", ReplyAction="http://tempuri.org/IService1/searchForEventResponse")]
        SoapToRest.EventService.DetailedEvent[] searchForEvent(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchForEvent", ReplyAction="http://tempuri.org/IService1/searchForEventResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent[]> searchForEventAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchForCategory", ReplyAction="http://tempuri.org/IService1/searchForCategoryResponse")]
        SoapToRest.EventService.Categories[] searchForCategory(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchForCategory", ReplyAction="http://tempuri.org/IService1/searchForCategoryResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.Categories[]> searchForCategoryAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createEvent", ReplyAction="http://tempuri.org/IService1/createEventResponse")]
        void createEvent(SoapToRest.EventService.Events newEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createEvent", ReplyAction="http://tempuri.org/IService1/createEventResponse")]
        System.Threading.Tasks.Task createEventAsync(SoapToRest.EventService.Events newEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readEvent", ReplyAction="http://tempuri.org/IService1/readEventResponse")]
        SoapToRest.EventService.Events readEvent(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readEvent", ReplyAction="http://tempuri.org/IService1/readEventResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.Events> readEventAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readEvents", ReplyAction="http://tempuri.org/IService1/readEventsResponse")]
        SoapToRest.EventService.Events[] readEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readEvents", ReplyAction="http://tempuri.org/IService1/readEventsResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.Events[]> readEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateEvent", ReplyAction="http://tempuri.org/IService1/updateEventResponse")]
        void updateEvent(SoapToRest.EventService.Events editedEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateEvent", ReplyAction="http://tempuri.org/IService1/updateEventResponse")]
        System.Threading.Tasks.Task updateEventAsync(SoapToRest.EventService.Events editedEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteEvent", ReplyAction="http://tempuri.org/IService1/deleteEventResponse")]
        void deleteEvent(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteEvent", ReplyAction="http://tempuri.org/IService1/deleteEventResponse")]
        System.Threading.Tasks.Task deleteEventAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createCategory", ReplyAction="http://tempuri.org/IService1/createCategoryResponse")]
        void createCategory(SoapToRest.EventService.Categories newCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createCategory", ReplyAction="http://tempuri.org/IService1/createCategoryResponse")]
        System.Threading.Tasks.Task createCategoryAsync(SoapToRest.EventService.Categories newCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readCategory", ReplyAction="http://tempuri.org/IService1/readCategoryResponse")]
        SoapToRest.EventService.Categories readCategory(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readCategory", ReplyAction="http://tempuri.org/IService1/readCategoryResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.Categories> readCategoryAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readCategories", ReplyAction="http://tempuri.org/IService1/readCategoriesResponse")]
        SoapToRest.EventService.Categories[] readCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readCategories", ReplyAction="http://tempuri.org/IService1/readCategoriesResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.Categories[]> readCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateCategory", ReplyAction="http://tempuri.org/IService1/updateCategoryResponse")]
        void updateCategory(SoapToRest.EventService.Categories editedCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateCategory", ReplyAction="http://tempuri.org/IService1/updateCategoryResponse")]
        System.Threading.Tasks.Task updateCategoryAsync(SoapToRest.EventService.Categories editedCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCategory", ReplyAction="http://tempuri.org/IService1/deleteCategoryResponse")]
        void deleteCategory(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCategory", ReplyAction="http://tempuri.org/IService1/deleteCategoryResponse")]
        System.Threading.Tasks.Task deleteCategoryAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createBusinessConnection", ReplyAction="http://tempuri.org/IService1/createBusinessConnectionResponse")]
        void createBusinessConnection(SoapToRest.EventService.BusinessConnections newBusinessConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createBusinessConnection", ReplyAction="http://tempuri.org/IService1/createBusinessConnectionResponse")]
        System.Threading.Tasks.Task createBusinessConnectionAsync(SoapToRest.EventService.BusinessConnections newBusinessConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readBusinessConnection", ReplyAction="http://tempuri.org/IService1/readBusinessConnectionResponse")]
        SoapToRest.EventService.BusinessConnections readBusinessConnection(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readBusinessConnection", ReplyAction="http://tempuri.org/IService1/readBusinessConnectionResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.BusinessConnections> readBusinessConnectionAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readBusinessConnections", ReplyAction="http://tempuri.org/IService1/readBusinessConnectionsResponse")]
        SoapToRest.EventService.BusinessConnections[] readBusinessConnections();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readBusinessConnections", ReplyAction="http://tempuri.org/IService1/readBusinessConnectionsResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.BusinessConnections[]> readBusinessConnectionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateBusinessConnection", ReplyAction="http://tempuri.org/IService1/updateBusinessConnectionResponse")]
        void updateBusinessConnection(SoapToRest.EventService.BusinessConnections editedBusinessConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateBusinessConnection", ReplyAction="http://tempuri.org/IService1/updateBusinessConnectionResponse")]
        System.Threading.Tasks.Task updateBusinessConnectionAsync(SoapToRest.EventService.BusinessConnections editedBusinessConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteBusinessConnection", ReplyAction="http://tempuri.org/IService1/deleteBusinessConnectionResponse")]
        void deleteBusinessConnection(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteBusinessConnection", ReplyAction="http://tempuri.org/IService1/deleteBusinessConnectionResponse")]
        System.Threading.Tasks.Task deleteBusinessConnectionAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createParticipant", ReplyAction="http://tempuri.org/IService1/createParticipantResponse")]
        void createParticipant(SoapToRest.EventService.Participants newParticipant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createParticipant", ReplyAction="http://tempuri.org/IService1/createParticipantResponse")]
        System.Threading.Tasks.Task createParticipantAsync(SoapToRest.EventService.Participants newParticipant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readParticipant", ReplyAction="http://tempuri.org/IService1/readParticipantResponse")]
        SoapToRest.EventService.Participants readParticipant(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readParticipant", ReplyAction="http://tempuri.org/IService1/readParticipantResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.Participants> readParticipantAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readParticipants", ReplyAction="http://tempuri.org/IService1/readParticipantsResponse")]
        SoapToRest.EventService.Participants[] readParticipants();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readParticipants", ReplyAction="http://tempuri.org/IService1/readParticipantsResponse")]
        System.Threading.Tasks.Task<SoapToRest.EventService.Participants[]> readParticipantsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateParticipant", ReplyAction="http://tempuri.org/IService1/updateParticipantResponse")]
        void updateParticipant(SoapToRest.EventService.Participants editedParticipant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateParticipant", ReplyAction="http://tempuri.org/IService1/updateParticipantResponse")]
        System.Threading.Tasks.Task updateParticipantAsync(SoapToRest.EventService.Participants editedParticipant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteParticipant", ReplyAction="http://tempuri.org/IService1/deleteParticipantResponse")]
        void deleteParticipant(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteParticipant", ReplyAction="http://tempuri.org/IService1/deleteParticipantResponse")]
        System.Threading.Tasks.Task deleteParticipantAsync(System.Nullable<int> id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SoapToRest.EventService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SoapToRest.EventService.IService1>, SoapToRest.EventService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] listEvents() {
            return base.Channel.listEvents();
        }
        
        public System.Threading.Tasks.Task<string[]> listEventsAsync() {
            return base.Channel.listEventsAsync();
        }
        
        public string[] listCategories() {
            return base.Channel.listCategories();
        }
        
        public System.Threading.Tasks.Task<string[]> listCategoriesAsync() {
            return base.Channel.listCategoriesAsync();
        }
        
        public string[] listParticipantsForEvent(int eventId) {
            return base.Channel.listParticipantsForEvent(eventId);
        }
        
        public System.Threading.Tasks.Task<string[]> listParticipantsForEventAsync(int eventId) {
            return base.Channel.listParticipantsForEventAsync(eventId);
        }
        
        public string[] listBusinessesForEvent(int eventId) {
            return base.Channel.listBusinessesForEvent(eventId);
        }
        
        public System.Threading.Tasks.Task<string[]> listBusinessesForEventAsync(int eventId) {
            return base.Channel.listBusinessesForEventAsync(eventId);
        }
        
        public SoapToRest.EventService.Product getRandomProduct() {
            return base.Channel.getRandomProduct();
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.Product> getRandomProductAsync() {
            return base.Channel.getRandomProductAsync();
        }
        
        public SoapToRest.EventService.Business getRandomBusiness() {
            return base.Channel.getRandomBusiness();
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.Business> getRandomBusinessAsync() {
            return base.Channel.getRandomBusinessAsync();
        }
        
        public SoapToRest.EventService.DetailedEvent getEvent(System.Nullable<int> eventId) {
            return base.Channel.getEvent(eventId);
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent> getEventAsync(System.Nullable<int> eventId) {
            return base.Channel.getEventAsync(eventId);
        }
        
        public SoapToRest.EventService.DetailedEvent[] getEvents() {
            return base.Channel.getEvents();
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent[]> getEventsAsync() {
            return base.Channel.getEventsAsync();
        }
        
        public SoapToRest.EventService.DetailedEvent[] getTodaysEvents() {
            return base.Channel.getTodaysEvents();
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent[]> getTodaysEventsAsync() {
            return base.Channel.getTodaysEventsAsync();
        }
        
        public SoapToRest.EventService.DetailedEvent[] getUpcomingEvents() {
            return base.Channel.getUpcomingEvents();
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent[]> getUpcomingEventsAsync() {
            return base.Channel.getUpcomingEventsAsync();
        }
        
        public SoapToRest.EventService.DetailedEvent[] getMyEvents(int userId) {
            return base.Channel.getMyEvents(userId);
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent[]> getMyEventsAsync(int userId) {
            return base.Channel.getMyEventsAsync(userId);
        }
        
        public SoapToRest.EventService.DetailedEvent[] searchForEvent(string search) {
            return base.Channel.searchForEvent(search);
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.DetailedEvent[]> searchForEventAsync(string search) {
            return base.Channel.searchForEventAsync(search);
        }
        
        public SoapToRest.EventService.Categories[] searchForCategory(string search) {
            return base.Channel.searchForCategory(search);
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.Categories[]> searchForCategoryAsync(string search) {
            return base.Channel.searchForCategoryAsync(search);
        }
        
        public void createEvent(SoapToRest.EventService.Events newEvent) {
            base.Channel.createEvent(newEvent);
        }
        
        public System.Threading.Tasks.Task createEventAsync(SoapToRest.EventService.Events newEvent) {
            return base.Channel.createEventAsync(newEvent);
        }
        
        public SoapToRest.EventService.Events readEvent(System.Nullable<int> id) {
            return base.Channel.readEvent(id);
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.Events> readEventAsync(System.Nullable<int> id) {
            return base.Channel.readEventAsync(id);
        }
        
        public SoapToRest.EventService.Events[] readEvents() {
            return base.Channel.readEvents();
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.Events[]> readEventsAsync() {
            return base.Channel.readEventsAsync();
        }
        
        public void updateEvent(SoapToRest.EventService.Events editedEvent) {
            base.Channel.updateEvent(editedEvent);
        }
        
        public System.Threading.Tasks.Task updateEventAsync(SoapToRest.EventService.Events editedEvent) {
            return base.Channel.updateEventAsync(editedEvent);
        }
        
        public void deleteEvent(System.Nullable<int> id) {
            base.Channel.deleteEvent(id);
        }
        
        public System.Threading.Tasks.Task deleteEventAsync(System.Nullable<int> id) {
            return base.Channel.deleteEventAsync(id);
        }
        
        public void createCategory(SoapToRest.EventService.Categories newCategory) {
            base.Channel.createCategory(newCategory);
        }
        
        public System.Threading.Tasks.Task createCategoryAsync(SoapToRest.EventService.Categories newCategory) {
            return base.Channel.createCategoryAsync(newCategory);
        }
        
        public SoapToRest.EventService.Categories readCategory(System.Nullable<int> id) {
            return base.Channel.readCategory(id);
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.Categories> readCategoryAsync(System.Nullable<int> id) {
            return base.Channel.readCategoryAsync(id);
        }
        
        public SoapToRest.EventService.Categories[] readCategories() {
            return base.Channel.readCategories();
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.Categories[]> readCategoriesAsync() {
            return base.Channel.readCategoriesAsync();
        }
        
        public void updateCategory(SoapToRest.EventService.Categories editedCategory) {
            base.Channel.updateCategory(editedCategory);
        }
        
        public System.Threading.Tasks.Task updateCategoryAsync(SoapToRest.EventService.Categories editedCategory) {
            return base.Channel.updateCategoryAsync(editedCategory);
        }
        
        public void deleteCategory(System.Nullable<int> id) {
            base.Channel.deleteCategory(id);
        }
        
        public System.Threading.Tasks.Task deleteCategoryAsync(System.Nullable<int> id) {
            return base.Channel.deleteCategoryAsync(id);
        }
        
        public void createBusinessConnection(SoapToRest.EventService.BusinessConnections newBusinessConnection) {
            base.Channel.createBusinessConnection(newBusinessConnection);
        }
        
        public System.Threading.Tasks.Task createBusinessConnectionAsync(SoapToRest.EventService.BusinessConnections newBusinessConnection) {
            return base.Channel.createBusinessConnectionAsync(newBusinessConnection);
        }
        
        public SoapToRest.EventService.BusinessConnections readBusinessConnection(System.Nullable<int> id) {
            return base.Channel.readBusinessConnection(id);
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.BusinessConnections> readBusinessConnectionAsync(System.Nullable<int> id) {
            return base.Channel.readBusinessConnectionAsync(id);
        }
        
        public SoapToRest.EventService.BusinessConnections[] readBusinessConnections() {
            return base.Channel.readBusinessConnections();
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.BusinessConnections[]> readBusinessConnectionsAsync() {
            return base.Channel.readBusinessConnectionsAsync();
        }
        
        public void updateBusinessConnection(SoapToRest.EventService.BusinessConnections editedBusinessConnection) {
            base.Channel.updateBusinessConnection(editedBusinessConnection);
        }
        
        public System.Threading.Tasks.Task updateBusinessConnectionAsync(SoapToRest.EventService.BusinessConnections editedBusinessConnection) {
            return base.Channel.updateBusinessConnectionAsync(editedBusinessConnection);
        }
        
        public void deleteBusinessConnection(System.Nullable<int> id) {
            base.Channel.deleteBusinessConnection(id);
        }
        
        public System.Threading.Tasks.Task deleteBusinessConnectionAsync(System.Nullable<int> id) {
            return base.Channel.deleteBusinessConnectionAsync(id);
        }
        
        public void createParticipant(SoapToRest.EventService.Participants newParticipant) {
            base.Channel.createParticipant(newParticipant);
        }
        
        public System.Threading.Tasks.Task createParticipantAsync(SoapToRest.EventService.Participants newParticipant) {
            return base.Channel.createParticipantAsync(newParticipant);
        }
        
        public SoapToRest.EventService.Participants readParticipant(System.Nullable<int> id) {
            return base.Channel.readParticipant(id);
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.Participants> readParticipantAsync(System.Nullable<int> id) {
            return base.Channel.readParticipantAsync(id);
        }
        
        public SoapToRest.EventService.Participants[] readParticipants() {
            return base.Channel.readParticipants();
        }
        
        public System.Threading.Tasks.Task<SoapToRest.EventService.Participants[]> readParticipantsAsync() {
            return base.Channel.readParticipantsAsync();
        }
        
        public void updateParticipant(SoapToRest.EventService.Participants editedParticipant) {
            base.Channel.updateParticipant(editedParticipant);
        }
        
        public System.Threading.Tasks.Task updateParticipantAsync(SoapToRest.EventService.Participants editedParticipant) {
            return base.Channel.updateParticipantAsync(editedParticipant);
        }
        
        public void deleteParticipant(System.Nullable<int> id) {
            base.Channel.deleteParticipant(id);
        }
        
        public System.Threading.Tasks.Task deleteParticipantAsync(System.Nullable<int> id) {
            return base.Channel.deleteParticipantAsync(id);
        }
    }
}
